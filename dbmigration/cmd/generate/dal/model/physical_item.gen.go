// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNamePhysicalItem = "physical_item"

// PhysicalItem mapped from table <physical_item>
type PhysicalItem struct {
	ITEMID              *int64     `gorm:"column:ITEM_ID;type:int" json:"ITEM_ID"`
	RECORDID            *int64     `gorm:"column:RECORD_ID;type:bigint" json:"RECORD_ID"`
	BARCODE             *string    `gorm:"column:BARCODE;type:varchar(100)" json:"BARCODE"`
	PROPNO              *string    `gorm:"column:PROP_NO;type:varchar(100)" json:"PROP_NO"`
	PROPACCOUNT         *int64     `gorm:"column:PROP_ACCOUNT;type:bigint" json:"PROP_ACCOUNT"`
	CALLNO              *string    `gorm:"column:CALL_NO;type:varchar(255)" json:"CALL_NO"`
	MATERIALCODE        *int64     `gorm:"column:MATERIAL_CODE;type:int" json:"MATERIAL_CODE"`
	GETMODECODE         *int64     `gorm:"column:GET_MODE_CODE;type:int" json:"GET_MODE_CODE"`
	PROCESSTYPE         *string    `gorm:"column:PROCESS_TYPE;type:varchar(5)" json:"PROCESS_TYPE"`
	CIRCFLAG            *int64     `gorm:"column:CIRC_FLAG;type:int" json:"CIRC_FLAG"`
	LISTPRICE           *float64   `gorm:"column:LIST_PRICE;type:double" json:"LIST_PRICE"`
	NETPRICE            *float64   `gorm:"column:NET_PRICE;type:double" json:"NET_PRICE"`
	FORELISTPRICE       *float64   `gorm:"column:FORE_LIST_PRICE;type:double" json:"FORE_LIST_PRICE"`
	FORENETPRICE        *float64   `gorm:"column:FORE_NET_PRICE;type:double" json:"FORE_NET_PRICE"`
	DISCOUNT            *float32   `gorm:"column:DISCOUNT;type:float" json:"DISCOUNT"`
	CURRENCYCODE        *int64     `gorm:"column:CURRENCY_CODE;type:int" json:"CURRENCY_CODE"`
	REMARK              *string    `gorm:"column:REMARK;type:varchar(255)" json:"REMARK"`
	SHELFNO             *string    `gorm:"column:SHELF_NO;type:varchar(255)" json:"SHELF_NO"`
	INDATE              *time.Time `gorm:"column:IN_DATE;type:timestamp" json:"IN_DATE"`
	YEAR                *string    `gorm:"column:YEAR;type:varchar(255)" json:"YEAR"`
	VOL                 *string    `gorm:"column:VOL;type:varchar(255)" json:"VOL"`
	COLLECTIONID        *int64     `gorm:"column:COLLECTION_ID;type:bigint" json:"COLLECTION_ID"`
	ITEMPOLICYCODE      *int64     `gorm:"column:ITEM_POLICY_CODE;type:int" json:"ITEM_POLICY_CODE"`
	ATTACHMENT          *string    `gorm:"column:ATTACHMENT;type:varchar(500)" json:"ATTACHMENT"`
	LIBCODE             *string    `gorm:"column:LIB_CODE;type:varchar(20)" json:"LIB_CODE"`
	LOCATIONID          *int64     `gorm:"column:LOCATION_ID;type:int" json:"LOCATION_ID"`
	GROUPCODE           *string    `gorm:"column:GROUP_CODE;type:varchar(20)" json:"GROUP_CODE"`
	ORDERLIBCODE        *string    `gorm:"column:ORDER_LIB_CODE;type:varchar(20)" json:"ORDER_LIB_CODE"`
	CURLOCATIONID       *int64     `gorm:"column:CUR_LOCATION_ID;type:int" json:"CUR_LOCATION_ID"`
	CURLIBCODE          *string    `gorm:"column:CUR_LIB_CODE;type:varchar(20)" json:"CUR_LIB_CODE"`
	CURDESKID           *int64     `gorm:"column:CUR_DESK_ID;type:bigint" json:"CUR_DESK_ID"`
	CIRCNUMBER          *int64     `gorm:"column:CIRC_NUMBER;type:int" json:"CIRC_NUMBER"`
	POL                 *int64     `gorm:"column:POL;type:bigint" json:"POL"`
	CREATEBY            *int64     `gorm:"column:CREATE_BY;type:bigint" json:"CREATE_BY"`
	CREATEDATE          *time.Time `gorm:"column:CREATE_DATE;type:timestamp" json:"CREATE_DATE"`
	UPDATEBY            *int64     `gorm:"column:UPDATE_BY;type:int" json:"UPDATE_BY"`
	UPDATEDATE          *time.Time `gorm:"column:UPDATE_DATE;type:timestamp" json:"UPDATE_DATE"`
	DESKID              *int64     `gorm:"column:DESK_ID;type:bigint" json:"DESK_ID"`
	SHELFNOX            *int64     `gorm:"column:SHELF_NO_X;type:int" json:"SHELF_NO_X"`
	SHELFNOY            *int64     `gorm:"column:SHELF_NO_Y;type:int" json:"SHELF_NO_Y"`
	SHELFNOZ            *int64     `gorm:"column:SHELF_NO_Z;type:int" json:"SHELF_NO_Z"`
	FUNDSRCCODE         *int64     `gorm:"column:FUND_SRC_CODE;type:int" json:"FUND_SRC_CODE"`
	CIRCATTR            *string    `gorm:"column:CIRC_ATTR;type:char(1)" json:"CIRC_ATTR"`
	RECDESKID           *int64     `gorm:"column:REC_DESK_ID;type:bigint" json:"REC_DESK_ID"`
	LEDGERSID           *int64     `gorm:"column:LEDGERS_ID;type:int" json:"LEDGERS_ID"`
	CATALOGCOLLECTIONID *int64     `gorm:"column:CATALOG_COLLECTION_ID;type:bigint" json:"CATALOG_COLLECTION_ID"`
	CATDESKID           *int64     `gorm:"column:CAT_DESK_ID;type:bigint" json:"CAT_DESK_ID"`
	CATUSERID           *int64     `gorm:"column:CAT_USER_ID;type:int" json:"CAT_USER_ID"`
	CATDATE             *time.Time `gorm:"column:CAT_DATE;type:timestamp" json:"CAT_DATE"`
	INVDESKID           *int64     `gorm:"column:INV_DESK_ID;type:bigint" json:"INV_DESK_ID"`
	INVUSERID           *int64     `gorm:"column:INV_USER_ID;type:int" json:"INV_USER_ID"`
	INVDATE             *time.Time `gorm:"column:INV_DATE;type:timestamp" json:"INV_DATE"`
	TOTALCIRCCOUNT      *int64     `gorm:"column:TOTAL_CIRC_COUNT;type:int" json:"TOTAL_CIRC_COUNT"`
	YEARCIRCCOUNT       *int64     `gorm:"column:YEAR_CIRC_COUNT;type:int" json:"YEAR_CIRC_COUNT"`
	WORKAREAID          *int64     `gorm:"column:WORK_AREA_ID;type:bigint" json:"WORK_AREA_ID"`
	WORKAREAADDDATE     *time.Time `gorm:"column:WORK_AREA_ADD_DATE;type:timestamp" json:"WORK_AREA_ADD_DATE"`
	EDITOR              *int64     `gorm:"column:EDITOR;type:int" json:"EDITOR"`
	EDITORDATE          *time.Time `gorm:"column:EDITOR_DATE;type:timestamp" json:"EDITOR_DATE"`
	BINDPRICE           *float64   `gorm:"column:BIND_PRICE;type:double" json:"BIND_PRICE"`
	FINDSHOWFLAG        *string    `gorm:"column:FIND_SHOW_FLAG;type:char(1)" json:"FIND_SHOW_FLAG"`
	VENDORID            *int64     `gorm:"column:VENDOR_ID;type:int" json:"VENDOR_ID"`
	DONATEID            *int64     `gorm:"column:DONATE_ID;type:bigint" json:"DONATE_ID"`
	ALLOCATEDATE        *time.Time `gorm:"column:ALLOCATE_DATE;type:timestamp" json:"ALLOCATE_DATE"`
	UNIONFLAG           *int64     `gorm:"column:UNION_FLAG;type:int" json:"UNION_FLAG"`
	BACKGROUPNAME       *string    `gorm:"column:BACK_GROUP_NAME;type:varchar(255)" json:"BACK_GROUP_NAME"`
}

// TableName PhysicalItem's table name
func (*PhysicalItem) TableName() string {
	return TableNamePhysicalItem
}
