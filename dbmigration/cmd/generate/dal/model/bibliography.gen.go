// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameBibliography = "bibliography"

// Bibliography mapped from table <bibliography>
type Bibliography struct {
	RECORDID                *int64     `gorm:"column:RECORD_ID;type:bigint" json:"RECORD_ID"`
	RESOURCECODE            *string    `gorm:"column:RESOURCE_CODE;type:varchar(10)" json:"RESOURCE_CODE"`
	LITCODE                 *int64     `gorm:"column:LIT_CODE;type:int" json:"LIT_CODE"`
	DOCCODE                 *int64     `gorm:"column:DOC_CODE;type:int" json:"DOC_CODE"`
	MDTYPE                  *string    `gorm:"column:MD_TYPE;type:varchar(20)" json:"MD_TYPE"`
	MDLEVEL                 *int64     `gorm:"column:MD_LEVEL;type:int" json:"MD_LEVEL"`
	COUNTRYCODE             *string    `gorm:"column:COUNTRY_CODE;type:varchar(10)" json:"COUNTRY_CODE"`
	LANGCODE                *string    `gorm:"column:LANG_CODE;type:varchar(5)" json:"LANG_CODE"`
	CIP                     *string    `gorm:"column:CIP;type:varchar(20)" json:"CIP"`
	LIBCODE                 *string    `gorm:"column:LIB_CODE;type:varchar(20)" json:"LIB_CODE"`
	GROUPCODE               *string    `gorm:"column:GROUP_CODE;type:varchar(20)" json:"GROUP_CODE"`
	CZRECID                 *int64     `gorm:"column:CZ_REC_ID;type:bigint" json:"CZ_REC_ID"`
	NZRECID                 *int64     `gorm:"column:NZ_REC_ID;type:bigint" json:"NZ_REC_ID"`
	CTRLRECID               *int64     `gorm:"column:CTRL_REC_ID;type:bigint" json:"CTRL_REC_ID"`
	DSFLAG                  *string    `gorm:"column:DS_FLAG;type:char(1)" json:"DS_FLAG"`
	CATALOGLEVEL            *int64     `gorm:"column:CATALOG_LEVEL;type:int" json:"CATALOG_LEVEL"`
	CATALOGEDITOR           *int64     `gorm:"column:CATALOG_EDITOR;type:int" json:"CATALOG_EDITOR"`
	CREATEBY                *int64     `gorm:"column:CREATE_BY;type:int" json:"CREATE_BY"`
	CREATEDATE              *time.Time `gorm:"column:CREATE_DATE;type:timestamp" json:"CREATE_DATE"`
	UPDATEBY                *int64     `gorm:"column:UPDATE_BY;type:int" json:"UPDATE_BY"`
	UPDATEDATE              *time.Time `gorm:"column:UPDATE_DATE;type:timestamp" json:"UPDATE_DATE"`
	TITLE                   *string    `gorm:"column:TITLE;type:longtext" json:"TITLE"`
	ISBN13                  *string    `gorm:"column:ISBN13;type:varchar(255)" json:"ISBN13"`
	ISBN10                  *string    `gorm:"column:ISBN10;type:varchar(255)" json:"ISBN10"`
	ISSN                    *string    `gorm:"column:ISSN;type:varchar(255)" json:"ISSN"`
	AUTHOR                  *string    `gorm:"column:AUTHOR;type:varchar(1000)" json:"AUTHOR"`
	PUBLISHER               *string    `gorm:"column:PUBLISHER;type:varchar(1000)" json:"PUBLISHER"`
	PUBDATE                 *string    `gorm:"column:PUB_DATE;type:varchar(50)" json:"PUB_DATE"`
	COVERURL                *string    `gorm:"column:COVER_URL;type:varchar(500)" json:"COVER_URL"`
	EDTYPE                  *int64     `gorm:"column:E_D_TYPE;type:int" json:"E_D_TYPE"`
	GROUPRECORDID           *int64     `gorm:"column:GROUP_RECORD_ID;type:bigint" json:"GROUP_RECORD_ID"`
	ITEMCOUNT               *int64     `gorm:"column:ITEM_COUNT;type:int" json:"ITEM_COUNT"`
	FOUNDINGYEAR            *string    `gorm:"column:FOUNDING_YEAR;type:varchar(50)" json:"FOUNDING_YEAR"`
	ENDYEAR                 *string    `gorm:"column:END_YEAR;type:varchar(50)" json:"END_YEAR"`
	DOI                     *string    `gorm:"column:DOI;type:varchar(255)" json:"DOI"`
	OA                      *int64     `gorm:"column:OA;type:int" json:"OA"`
	OLDID                   *string    `gorm:"column:OLD_ID;type:varchar(200)" json:"OLD_ID"`
	DXID                    *string    `gorm:"column:DX_ID;type:varchar(50)" json:"DX_ID"`
	CATALOGSAVEEDITOR       *int64     `gorm:"column:CATALOG_SAVE_EDITOR;type:int" json:"CATALOG_SAVE_EDITOR"`
	FIRSTYBEDITOR           *int64     `gorm:"column:FIRST_YB_EDITOR;type:int" json:"FIRST_YB_EDITOR"`
	FIRSTYBDATE             *time.Time `gorm:"column:FIRST_YB_DATE;type:timestamp" json:"FIRST_YB_DATE"`
	CHAOXINGECOLLECTIONFLAG *int64     `gorm:"column:CHAOXING_E_COLLECTION_FLAG;type:int" json:"CHAOXING_E_COLLECTION_FLAG"`
	ORIGINALEDITOR          *int64     `gorm:"column:ORIGINAL_EDITOR;type:int" json:"ORIGINAL_EDITOR"`
	ORIGINALDATE            *time.Time `gorm:"column:ORIGINAL_DATE;type:timestamp" json:"ORIGINAL_DATE"`
}

// TableName Bibliography's table name
func (*Bibliography) TableName() string {
	return TableNameBibliography
}
