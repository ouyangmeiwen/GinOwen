// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameLocationCopy1 = "location_copy1"

// LocationCopy1 mapped from table <location_copy1>
type LocationCopy1 struct {
	LOCATIONID           int64      `gorm:"column:LOCATION_ID;type:int;primaryKey;autoIncrement:true" json:"LOCATION_ID"`
	LOCATIONCODE         string     `gorm:"column:LOCATION_CODE;type:varchar(20);not null" json:"LOCATION_CODE"`
	LOCATIONNAME         string     `gorm:"column:LOCATION_NAME;type:varchar(150);not null" json:"LOCATION_NAME"`
	LOCATIONTYPECODE     string     `gorm:"column:LOCATION_TYPE_CODE;type:varchar(255);not null" json:"LOCATION_TYPE_CODE"`
	ADDRESS              *string    `gorm:"column:ADDRESS;type:varchar(200)" json:"ADDRESS"`
	INTRODUCE            *string    `gorm:"column:INTRODUCE;type:varchar(200)" json:"INTRODUCE"`
	LOCATIONCLASS        *string    `gorm:"column:LOCATION_CLASS;type:varchar(2000)" json:"LOCATION_CLASS"`
	CIRCATTR             *int64     `gorm:"column:CIRC_ATTR;type:int;default:-1" json:"CIRC_ATTR"`
	REMARK               *string    `gorm:"column:REMARK;type:varchar(255)" json:"REMARK"`
	USEFLAG              *string    `gorm:"column:USE_FLAG;type:char(1);default:1" json:"USE_FLAG"`
	LIBCODE              string     `gorm:"column:LIB_CODE;type:varchar(20);not null;default:00000000000" json:"LIB_CODE"`
	BRANCHCODE           *string    `gorm:"column:BRANCH_CODE;type:varchar(255)" json:"BRANCH_CODE"`
	GROUPCODE            string     `gorm:"column:GROUP_CODE;type:varchar(20);not null;default:00000000000" json:"GROUP_CODE"`
	CREATEBY             int64      `gorm:"column:CREATE_BY;type:int;not null;default:-1" json:"CREATE_BY"`
	CREATEDATE           *time.Time `gorm:"column:CREATE_DATE;type:datetime;default:CURRENT_TIMESTAMP" json:"CREATE_DATE"` // 创建时间
	UPDATEBY             *int64     `gorm:"column:UPDATE_BY;type:int" json:"UPDATE_BY"`
	UPDATEDATE           *time.Time `gorm:"column:UPDATE_DATE;type:datetime;default:CURRENT_TIMESTAMP" json:"UPDATE_DATE"` // 更新时间
	OPENFLAG             *string    `gorm:"column:OPEN_FLAG;type:char(1)" json:"OPEN_FLAG"`
	LOCATIONSHORTNAME    *string    `gorm:"column:LOCATION_SHORT_NAME;type:varchar(150)" json:"LOCATION_SHORT_NAME"`
	CAMPUSID             *int64     `gorm:"column:CAMPUS_ID;type:int" json:"CAMPUS_ID"`
	ORDERTAKEBOOKFLAG    *string    `gorm:"column:ORDER_TAKE_BOOK_FLAG;type:char(1);default:0" json:"ORDER_TAKE_BOOK_FLAG"` // 是否预约取书地（0 ：否 1：是）
	TAKEBOOKFLAG         *string    `gorm:"column:TAKE_BOOK_FLAG;type:char(1);default:0" json:"TAKE_BOOK_FLAG"`
	OFFERENTRUSTSERVICE  string     `gorm:"column:OFFER_ENTRUST_SERVICE;type:char(1);not null;default:0" json:"OFFER_ENTRUST_SERVICE"`
	OFFERRESERVESERVICE  string     `gorm:"column:OFFER_RESERVE_SERVICE;type:char(1);not null;default:0" json:"OFFER_RESERVE_SERVICE"`
	FINDSHOWFLAG         *int64     `gorm:"column:FIND_SHOW_FLAG;type:int;default:1" json:"FIND_SHOW_FLAG"`                       // 统一检索是否展示馆藏地标记 0不展示 1展示
	ENTRUSTTAKEBOOKLIMIT *string    `gorm:"column:ENTRUST_TAKE_BOOK_LIMIT;type:char(1);default:0" json:"ENTRUST_TAKE_BOOK_LIMIT"` // 委托取书地限制(0: 不限制   1: 限制本校区/地区取书   2: 限制异校区/地区取书)
	ONSHELFTYPE          *string    `gorm:"column:ON_SHELF_TYPE;type:char(1);default:1" json:"ON_SHELF_TYPE"`                     // (废弃)新书上架类型 1:立即上架 2:手动上架 3:分配n天后自动上架
	DELAYDAYS            *int64     `gorm:"column:DELAY_DAYS;type:int" json:"DELAY_DAYS"`                                         // (废弃)延迟上架天数
	RETURNBOOKSHELFTYPE  *string    `gorm:"column:RETURN_BOOKSHELF_TYPE;type:char(1)" json:"RETURN_BOOKSHELF_TYPE"`               // 还书上架类型 1:立即上架 2:手动上架
	SORT                 *int64     `gorm:"column:SORT;type:int" json:"SORT"`                                                     // 馆藏地排序字段
	ISINTENSIVE          *string    `gorm:"column:IS_INTENSIVE;type:char(2);default:0" json:"IS_INTENSIVE"`                       // 是否为密集库 0不是 1是 默认为0
	COUNTERSHOWFLAG      *string    `gorm:"column:COUNTER_SHOW_FLAG;type:char(1);default:0" json:"COUNTER_SHOW_FLAG"`             // 分析决策展示标识 0不展示 1展示
	MAXLENDCOUNT         *int64     `gorm:"column:MAX_LEND_COUNT;type:int" json:"MAX_LEND_COUNT"`                                 // 最大借阅复本数
	COUNTERSORT          *int64     `gorm:"column:COUNTER_SORT;type:int" json:"COUNTER_SORT"`                                     // 馆藏地分析决策排序字段
}

// TableName LocationCopy1's table name
func (*LocationCopy1) TableName() string {
	return TableNameLocationCopy1
}
