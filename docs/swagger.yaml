definitions:
  models.Libiteminventoryinfo:
    properties:
      Antenna:
        type: string
      CreationTime:
        type: string
      CreatorUserId:
        type: integer
      ExceptionMsg:
        type: string
      Id:
        type: string
      InventoryState:
        type: integer
      ItemBarcode:
        type: string
      ItemEpc:
        type: string
      ItemTid:
        type: string
      LastModificationTime:
        type: string
      LastModifierUserId:
        type: integer
      LayerCode:
        type: string
      LayerId:
        type: string
      LayerName:
        type: string
      LocLayerCode:
        type: string
      LocLayerId:
        type: string
      LocLayerName:
        type: string
      OCRItemAuthor:
        type: string
      OCRItemCallNo:
        type: string
      OCRItemISBN:
        type: string
      OCRItemPublisher:
        type: string
      OCRItemTitle:
        type: string
      OffShelfTime:
        type: string
      OriginType:
        type: integer
      Remark:
        type: string
      TenantId:
        type: integer
    type: object
  request.AddBlackListInput:
    properties:
      ip:
        type: string
      unlock_time:
        description: 解锁时间，格式："yyyy-mm-dd hh:mm:ss"
        type: string
    type: object
  request.CreateInventoryInput:
    properties:
      item:
        $ref: '#/definitions/models.Libiteminventoryinfo'
    type: object
  request.CreateLmsLogInput:
    properties:
      BrowserInfo:
        type: string
      ClientIpAddress:
        type: string
      ClientName:
        type: string
      CustomData:
        type: string
      Exception:
        type: string
      ExecutionDuration:
        type: integer
      ExecutionTime:
        type: string
      Id:
        type: integer
      ImpersonatorTenantId:
        type: integer
      ImpersonatorUserId:
        type: integer
      MethodName:
        type: string
      Parameters:
        type: string
      ReturnValue:
        type: string
      ServiceName:
        type: string
      TenantId:
        type: integer
      UserId:
        type: integer
    type: object
  request.GPIReceiveInput:
    properties:
      receivedata:
        description: 消息体
      receivetype:
        description: 消息类型
        type: string
    type: object
  request.ImportExcelByIndexInput:
    properties:
      author:
        default: -1
        description: 作者
        type: integer
      barcode:
        default: -1
        description: 条码号
        type: integer
      callNo:
        default: -1
        description: 索书号
        type: integer
      catalogCode:
        default: -1
        description: 分类号
        type: integer
      isbn:
        default: -1
        description: ISBN
        type: integer
      locationname:
        default: -1
        description: 当前馆藏地点
        type: integer
      pages:
        default: -1
        description: 页数
        type: integer
      path:
        default: d:/4.xlsx
        description: excel 服务器本地路径
        maxLength: 100
        minLength: 3
        type: string
      price:
        default: -1
        description: 单价
        type: integer
      pubDate:
        default: -1
        description: 出版日期
        type: integer
      publisher:
        default: -1
        description: 出版社
        type: integer
      tenantid:
        default: 1
        description: 租户
        maximum: 99999
        minimum: 1
        type: integer
      tid:
        default: -1
        description: tid
        type: integer
      title:
        default: -1
        description: 题名
        type: integer
    required:
    - path
    - tenantid
    type: object
  request.ImportExcelByNameInput:
    properties:
      author:
        default: 作者
        description: 作者
        type: string
      barcode:
        default: 条码号
        description: 条码号
        type: string
      callNo:
        default: 索书号
        description: 索书号
        type: string
      catalogCode:
        default: 分类号
        description: 分类号
        type: string
      isbn:
        default: ISBN
        description: ISBN
        type: string
      locationname:
        default: 当前馆藏地点
        description: 当前馆藏地点
        type: string
      pages:
        default: 页数
        description: 页数
        type: string
      path:
        default: d:/4.xlsx
        description: excel 服务器本地路径
        maxLength: 100
        minLength: 3
        type: string
      price:
        default: 单价
        description: 单价
        type: string
      pubDate:
        default: 出版日期
        description: 出版日期
        type: string
      publisher:
        default: 出版社
        description: 出版社
        type: string
      tenantid:
        default: 1
        description: 租户
        maximum: 99999
        minimum: 1
        type: integer
      tid:
        default: tid
        description: tid
        type: string
      title:
        default: 题名
        description: 题名
        type: string
    required:
    - path
    - tenantid
    type: object
  request.LoginRequest:
    properties:
      password:
        default: "123456"
        type: string
      username:
        default: admin
        type: string
    required:
    - password
    - username
    type: object
  request.RegisterRequest:
    properties:
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    required:
    - password
    - role_id
    - username
    type: object
  request.SendMqMsgInput:
    properties:
      datatype:
        description: 消息类型
        type: string
      jsonbody:
        description: 消息体
      routingkey:
        default: default_routingKey.init
        description: 路由键
        type: string
    type: object
  request.UnLockIpInput:
    properties:
      ip:
        type: string
    type: object
  request.UpdateInventoryInput:
    properties:
      item:
        $ref: '#/definitions/models.Libiteminventoryinfo'
    type: object
  request.UpdateLmsLogInput:
    properties:
      BrowserInfo:
        type: string
      ClientIpAddress:
        type: string
      ClientName:
        type: string
      CustomData:
        type: string
      Exception:
        type: string
      ExecutionDuration:
        type: integer
      ExecutionTime:
        type: string
      Id:
        type: integer
      ImpersonatorTenantId:
        type: integer
      ImpersonatorUserId:
        type: integer
      MethodName:
        type: string
      Parameters:
        type: string
      ReturnValue:
        type: string
      ServiceName:
        type: string
      TenantId:
        type: integer
      UserId:
        type: integer
    type: object
  response.AddScheduledTaskDto:
    type: object
  response.CreateInventoryDto:
    type: object
  response.CreateLmsLogDto:
    type: object
  response.DeleteInventoryDto:
    type: object
  response.DeleteLmsLogDto:
    type: object
  response.GetInventoryDto:
    properties:
      items:
        items:
          $ref: '#/definitions/models.Libiteminventoryinfo'
        type: array
      totalCount:
        type: integer
    type: object
  response.ImportExcelDto:
    type: object
  response.LiblayerDto:
    properties:
      Barcode:
        type: string
      Code:
        type: string
      CreationTime:
        type: string
      CreatorUserId:
        type: integer
      DeleterUserId:
        type: integer
      DeletionTime:
        type: string
      Id:
        type: string
      IsDeleted:
        items:
          type: integer
        type: array
      IsEnable:
        items:
          type: integer
        type: array
      ItemBarcode:
        type: string
      ItemCallNo:
        type: string
      LastModificationTime:
        type: string
      LastModifierUserId:
        type: integer
      LayerNo:
        type: integer
      Name:
        type: string
      OriginType:
        type: integer
      PreCallNo:
        type: string
      Remark:
        type: string
      ShelfId:
        type: string
      Side:
        type: string
      TenantId:
        type: integer
      Tid:
        type: string
    type: object
  response.LibrowDto:
    properties:
      CatalogCode:
        type: string
      Code:
        type: string
      CreationTime:
        type: string
      CreatorUserId:
        type: integer
      DeleterUserId:
        type: integer
      DeletionTime:
        type: string
      Id:
        type: string
      IsDeleted:
        items:
          type: integer
        type: array
      LastModificationTime:
        type: string
      LastModifierUserId:
        type: integer
      LocationId:
        type: string
      Name:
        type: string
      Remark:
        type: string
      RowNo:
        type: integer
      RowType:
        type: integer
      RowUsageType:
        type: integer
      Shelfs:
        description: 架
        items:
          $ref: '#/definitions/response.LibshelfDto'
        type: array
      TenantId:
        type: integer
    type: object
  response.LibshelfDto:
    properties:
      Angel:
        type: number
      Code:
        type: string
      CreationTime:
        type: string
      CreatorUserId:
        type: integer
      DeleterUserId:
        type: integer
      DeletionTime:
        type: string
      Id:
        type: string
      IsBosseyed:
        items:
          type: integer
        type: array
      IsDeleted:
        items:
          type: integer
        type: array
      IsEnable:
        items:
          type: integer
        type: array
      LastModificationTime:
        type: string
      LastModifierUserId:
        type: integer
      Layers:
        description: 层
        items:
          $ref: '#/definitions/response.LiblayerDto'
        type: array
      Name:
        type: string
      Remark:
        type: string
      RfidReaderId:
        type: string
      RowIdentity:
        type: string
      SerialPortId:
        type: string
      ShelfNo:
        type: integer
      Side:
        type: string
      StructId:
        type: string
      TenantId:
        type: integer
      X1:
        type: number
      X2:
        type: number
      Y1:
        type: number
      Y2:
        type: number
    type: object
  response.QueryLmsDto:
    properties:
      items:
        description: 数据集
        items:
          $ref: '#/definitions/response.QueryLmsItem'
        type: array
      totalCount:
        description: 总数量
        type: integer
    type: object
  response.QueryLmsItem:
    properties:
      BrowserInfo:
        type: string
      ClientIpAddress:
        type: string
      ClientName:
        type: string
      CustomData:
        type: string
      Exception:
        type: string
      ExecutionDuration:
        type: integer
      ExecutionTime:
        type: string
      Id:
        type: integer
      ImpersonatorTenantId:
        type: integer
      ImpersonatorUserId:
        type: integer
      MethodName:
        type: string
      Parameters:
        type: string
      ReturnValue:
        type: string
      ServiceName:
        type: string
      TenantId:
        type: integer
      UserId:
        type: integer
    type: object
  response.QueryRowDto:
    properties:
      Rows:
        description: 行
        items:
          $ref: '#/definitions/response.LibrowDto'
        type: array
    type: object
  response.SendMqMsgDto:
    type: object
  response.ShowBlackListDto:
    properties:
      items:
        additionalProperties:
          type: string
        type: object
    type: object
  response.UpdateInventoryDto:
    type: object
  response.UpdateLmsLogDto:
    type: object
  response.UploadResponse:
    properties:
      filePath:
        type: string
    type: object
  utils.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
  description: 这是一个全局启用了安全验证的 API。
  title: GinOwen API
  version: "1.0"
paths:
  /GPI/GPIReceive:
    post:
      consumes:
      - application/json
      description: GPI接口
      parameters:
      - description: 消息入参 receivetype标记管道,receivedata标记管道参数{}
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.GPIReceiveInput'
      produces:
      - application/json
      responses:
        "200":
          description: 返参
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data: {}
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: GPI接口
      tags:
      - GPI
  /IP/AddBlackList:
    post:
      consumes:
      - application/json
      description: 增加IP限制
      parameters:
      - description: 增加黑名单参数
        in: body
        name: AddBlackListInput
        required: true
        schema:
          $ref: '#/definitions/request.AddBlackListInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid unlock time format
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 增加IP限制
      tags:
      - IP
  /IP/GetBlackList:
    get:
      consumes:
      - application/json
      description: 获取当前IP黑名单的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 返回清单
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ShowBlackListDto'
                msg:
                  type: string
              type: object
        "400":
          description: Invalid request
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 获取IP黑名单列表
      tags:
      - IP
  /IP/UnLockIp:
    post:
      consumes:
      - application/json
      description: 解除IP限制
      parameters:
      - description: 解锁参数
        in: body
        name: UnLockIpInput
        required: true
        schema:
          $ref: '#/definitions/request.UnLockIpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: IP not found in the blacklist
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 解除IP限制
      tags:
      - IP
  /MQ/SendRabbitMQMsg:
    post:
      consumes:
      - application/json
      description: 发送RabbitMQ消息
      parameters:
      - description: 入参
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SendMqMsgInput'
      produces:
      - application/json
      responses:
        "200":
          description: 返参
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SendMqMsgDto'
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 发送RabbitMQ消息
      tags:
      - MQ
  /Task/AddTask:
    get:
      parameters:
      - default: 0
        in: query
        name: IntervalSeconds
        type: integer
      - description: 计划执行时间，非空 2024-12-01T17:10:45+08:00
        in: query
        name: ScheduleTime
        type: string
      - description: 任务名称，非空，类型为 varchar(255)
        in: query
        name: TaskName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.AddScheduledTaskDto'
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 添加任务
      tags:
      - Task
  /api/services/app/LibRow/QueryRows:
    get:
      parameters:
      - description: 书架号
        in: query
        name: row_no
        type: integer
      - description: 馆藏地编码
        in: query
        name: struct_code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回清单
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.QueryRowDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 查询书架
      tags:
      - LibRow
  /api/services/app/Libiteminventory/CreateInventory:
    post:
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateInventoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: 返回
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.CreateInventoryDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 新增盘点位置
      tags:
      - Libiteminventory
  /api/services/app/Libiteminventory/DeleteInventory:
    delete:
      parameters:
      - in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回清单
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.DeleteInventoryDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 删除盘点位置
      tags:
      - Libiteminventory
  /api/services/app/Libiteminventory/QueryInventory:
    get:
      parameters:
      - default: 100
        description: 获取多少条结果
        in: query
        maximum: 99999
        minimum: 1
        name: MaxResultCount
        type: integer
      - default: 0
        description: 跳过多少数量
        in: query
        maximum: 99999
        minimum: -1
        name: SkipCount
        type: integer
      - in: query
        name: barcode
        type: string
      - in: query
        name: callNo
        type: string
      - in: query
        name: isbn
        type: string
      - in: query
        name: layerCode
        type: string
      - in: query
        name: layerName
        type: string
      - in: query
        name: locLayerCode
        type: string
      - in: query
        name: locLayerName
        type: string
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.GetInventoryDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 查询盘点位置
      tags:
      - Libiteminventory
  /api/services/app/Libiteminventory/UpdateInventory:
    put:
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateInventoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: 返回
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.UpdateInventoryDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 修改盘点位置
      tags:
      - Libiteminventory
  /api/services/app/Libitems/ImportExcelByIndex:
    post:
      consumes:
      - application/json
      description: 通过提供的Excel文件导入图书信息
      parameters:
      - description: 导入参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ImportExcelByIndexInput'
      produces:
      - application/json
      responses:
        "200":
          description: 导入成功，返回导入的数据
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ImportExcelDto'
                msg:
                  type: string
              type: object
        "400":
          description: 无效的请求
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 导入图书信息
      tags:
      - Libitems
  /api/services/app/Libitems/ImportExcelByName:
    post:
      consumes:
      - application/json
      description: 通过提供的Excel文件导入图书信息
      parameters:
      - description: 导入参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ImportExcelByNameInput'
      produces:
      - application/json
      responses:
        "200":
          description: 导入成功，返回导入的数据
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ImportExcelDto'
                msg:
                  type: string
              type: object
        "400":
          description: 无效的请求
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 导入图书信息
      tags:
      - Libitems
  /api/services/app/Sysauditlmslog/CreateLmsLog:
    post:
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CreateLmsLogInput'
      produces:
      - application/json
      responses:
        "200":
          description: 返回
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.CreateLmsLogDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 新增LMS审计日志
      tags:
      - Sysauditlmslog
  /api/services/app/Sysauditlmslog/DeleteLmsLog:
    delete:
      parameters:
      - description: 根据主键删除
        in: query
        name: Id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回清单
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.DeleteLmsLogDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 删除LMS日志
      tags:
      - Sysauditlmslog
  /api/services/app/Sysauditlmslog/QueryLmsLog:
    get:
      parameters:
      - description: 最大执行时间
        in: query
        name: ExecutionDuration
        type: integer
      - description: 是否异常
        in: query
        name: IsException
        type: boolean
      - default: 100
        description: 获取多少条结果
        in: query
        maximum: 99999
        minimum: 1
        name: MaxResultCount
        type: integer
      - description: 方法
        in: query
        name: MethodName
        type: string
      - description: 参数
        in: query
        name: Parameters
        type: string
      - description: 服务名
        in: query
        name: ServiceName
        type: string
      - default: 0
        description: 跳过多少数量
        in: query
        maximum: 99999
        minimum: -1
        name: SkipCount
        type: integer
      - description: 租户
        in: query
        name: TenantId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回清单
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.QueryLmsDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 查询LMS日志
      tags:
      - Sysauditlmslog
  /api/services/app/Sysauditlmslog/UpdateLmsLog:
    put:
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateLmsLogInput'
      produces:
      - application/json
      responses:
        "200":
          description: 返回
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.UpdateLmsLogDto'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 修改LMS审计日志
      tags:
      - Sysauditlmslog
  /api/services/app/file/DownloadFile:
    get:
      consumes:
      - application/json
      description: 根据文件路径下载文件
      parameters:
      - description: 文件路径
        in: query
        name: filePath
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 文件下载成功
          schema:
            type: file
        "400":
          description: 无效的请求
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
        "404":
          description: 文件未找到
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 下载文件
      tags:
      - File
  /api/services/app/file/UploadFile:
    post:
      consumes:
      - multipart/form-data
      description: 接收一个文件和对象信息
      parameters:
      - description: 文件名称
        in: formData
        name: name
        required: true
        type: string
      - description: 文件描述
        in: formData
        name: description
        type: string
      - description: 文件描述
        in: formData
        name: cover
        type: boolean
      - description: 上传的文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UploadResponse'
                msg:
                  type: string
              type: object
        "400":
          description: 无效的请求
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 上传文件
      tags:
      - File
  /auth/Login:
    post:
      consumes:
      - application/json
      description: 用户输入用户名和密码，验证通过后返回JWT Token。
      parameters:
      - description: 用户登录请求
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "401":
          description: Invalid username or password
          schema:
            type: string
      summary: 用户登录
      tags:
      - Auth
  /auth/LoginOut:
    post:
      consumes:
      - application/json
      description: 注销token
      produces:
      - application/json
      responses:
        "200":
          description: User logout successfully
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 注销token
      tags:
      - Auth
  /auth/Register:
    post:
      consumes:
      - application/json
      description: 用户提交注册信息，注册成功后返回成功消息。
      parameters:
      - description: 用户注册请求
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "409":
          description: Username already exists
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: 用户注册
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    description: JWT Authorization header (Bearer token)
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
