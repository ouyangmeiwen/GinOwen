// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"
)

const TableNameLcpterminalbox = "lcpterminalbox"

// Lcpterminalbox mapped from table <lcpterminalbox>
type Lcpterminalbox struct {
	ID                   string     `gorm:"column:Id;type:varchar(32);primaryKey" json:"Id"`
	CreationTime         time.Time  `gorm:"column:CreationTime;type:datetime(6);not null" json:"CreationTime"`
	CreatorUserID        *int64     `gorm:"column:CreatorUserId;type:bigint" json:"CreatorUserId"`
	LastModificationTime *time.Time `gorm:"column:LastModificationTime;type:datetime(6)" json:"LastModificationTime"`
	LastModifierUserID   *int64     `gorm:"column:LastModifierUserId;type:bigint" json:"LastModifierUserId"`
	Name                 string     `gorm:"column:Name;type:varchar(64);not null" json:"Name"`
	TerminalID           string     `gorm:"column:TerminalId;type:varchar(32);not null" json:"TerminalId"`
	TerminalCode         string     `gorm:"column:TerminalCode;type:varchar(32);not null" json:"TerminalCode"`
	TerminalName         string     `gorm:"column:TerminalName;type:varchar(128);not null" json:"TerminalName"`
	IsFull               []uint8    `gorm:"column:IsFull;type:bit(1);not null" json:"IsFull"`
	IsDisable            []uint8    `gorm:"column:IsDisable;type:bit(1);not null" json:"IsDisable"`
	IsEnable             []uint8    `gorm:"column:IsEnable;type:bit(1);not null" json:"IsEnable"`
	DisableReason        *string    `gorm:"column:DisableReason;type:varchar(256)" json:"DisableReason"`
	TenantID             int64      `gorm:"column:TenantId;type:int;not null" json:"TenantId"`
}

// TableName Lcpterminalbox's table name
func (*Lcpterminalbox) TableName() string {
	return TableNameLcpterminalbox
}
