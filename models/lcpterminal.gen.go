// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"
)

const TableNameLcpterminal = "lcpterminal"

// Lcpterminal mapped from table <lcpterminal>
type Lcpterminal struct {
	ID                   string     `gorm:"column:Id;type:varchar(32);primaryKey" json:"Id"`
	CreationTime         time.Time  `gorm:"column:CreationTime;type:datetime(6);not null" json:"CreationTime"`
	CreatorUserID        *int64     `gorm:"column:CreatorUserId;type:bigint" json:"CreatorUserId"`
	LastModificationTime *time.Time `gorm:"column:LastModificationTime;type:datetime(6)" json:"LastModificationTime"`
	LastModifierUserID   *int64     `gorm:"column:LastModifierUserId;type:bigint" json:"LastModifierUserId"`
	IsDeleted            []uint8    `gorm:"column:IsDeleted;type:bit(1);not null" json:"IsDeleted"`
	DeleterUserID        *int64     `gorm:"column:DeleterUserId;type:bigint" json:"DeleterUserId"`
	DeletionTime         *time.Time `gorm:"column:DeletionTime;type:datetime(6)" json:"DeletionTime"`
	TerminalCategory     string     `gorm:"column:TerminalCategory;type:varchar(32);not null" json:"TerminalCategory"`
	TerminalType         string     `gorm:"column:TerminalType;type:varchar(32);not null" json:"TerminalType"`
	Code                 string     `gorm:"column:Code;type:varchar(32);not null" json:"Code"`
	Name                 string     `gorm:"column:Name;type:varchar(128);not null" json:"Name"`
	IsEnable             []uint8    `gorm:"column:IsEnable;type:bit(1);not null" json:"IsEnable"`
	VersionCode          int64      `gorm:"column:VersionCode;type:int;not null" json:"VersionCode"`
	VersionName          *string    `gorm:"column:VersionName;type:varchar(32)" json:"VersionName"`
	Longitude            float64    `gorm:"column:Longitude;type:decimal(10,6);not null" json:"Longitude"`
	Latitude             float64    `gorm:"column:Latitude;type:decimal(10,6);not null" json:"Latitude"`
	Province             *string    `gorm:"column:Province;type:varchar(32)" json:"Province"`
	City                 *string    `gorm:"column:City;type:varchar(32)" json:"City"`
	District             *string    `gorm:"column:District;type:varchar(32)" json:"District"`
	Street               *string    `gorm:"column:Street;type:varchar(32)" json:"Street"`
	Address              *string    `gorm:"column:Address;type:varchar(128)" json:"Address"`
	Mac                  *string    `gorm:"column:Mac;type:varchar(32)" json:"Mac"`
	IP                   *string    `gorm:"column:Ip;type:varchar(512)" json:"Ip"`
	LocationID           *string    `gorm:"column:LocationId;type:varchar(32)" json:"LocationId"`
	LocationName         *string    `gorm:"column:LocationName;type:varchar(128)" json:"LocationName"`
	Password             *string    `gorm:"column:Password;type:varchar(16)" json:"Password"`
	Remark               *string    `gorm:"column:Remark;type:varchar(256)" json:"Remark"`
	OriginType           int64      `gorm:"column:OriginType;type:tinyint unsigned;not null" json:"OriginType"`
	TenantID             int64      `gorm:"column:TenantId;type:int;not null" json:"TenantId"`
	MachineCode          *string    `gorm:"column:MachineCode;type:varchar(32)" json:"MachineCode"`
}

// TableName Lcpterminal's table name
func (*Lcpterminal) TableName() string {
	return TableNameLcpterminal
}
