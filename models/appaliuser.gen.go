// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"
)

const TableNameAppaliuser = "appaliuser"

// Appaliuser mapped from table <appaliuser>
type Appaliuser struct {
	ID                 string    `gorm:"column:Id;type:varchar(255);primaryKey" json:"Id"`
	CreationTime       time.Time `gorm:"column:CreationTime;type:datetime(6);not null" json:"CreationTime"`
	CreatorUserID      *int64    `gorm:"column:CreatorUserId;type:bigint" json:"CreatorUserId"`
	AliUserID          string    `gorm:"column:AliUserId;type:varchar(16);not null" json:"AliUserId"`
	Avatar             *string   `gorm:"column:Avatar;type:varchar(400)" json:"Avatar"`
	Province           *string   `gorm:"column:Province;type:varchar(16)" json:"Province"`
	City               *string   `gorm:"column:City;type:varchar(16)" json:"City"`
	NickName           *string   `gorm:"column:NickName;type:varchar(64)" json:"NickName"`
	IsStudentCertified *string   `gorm:"column:IsStudentCertified;type:varchar(2)" json:"IsStudentCertified"`
	UserType           *string   `gorm:"column:UserType;type:varchar(2)" json:"UserType"`
	UserStatus         *string   `gorm:"column:UserStatus;type:varchar(2)" json:"UserStatus"`
	IsCertified        *string   `gorm:"column:IsCertified;type:varchar(2)" json:"IsCertified"`
	Gender             *string   `gorm:"column:Gender;type:varchar(10)" json:"Gender"`
	TenantID           int64     `gorm:"column:TenantId;type:int;not null" json:"TenantId"`
}

// TableName Appaliuser's table name
func (*Appaliuser) TableName() string {
	return TableNameAppaliuser
}
