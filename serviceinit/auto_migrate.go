package serviceinit

import (
	"GINOWEN/extenddb/model"
	"log"

	"gorm.io/gorm"
)

func CusAutoMigrate(DB *gorm.DB) {
	var err error
	err = DB.AutoMigrate(&model.Efmigrationshistory{})
	err = DB.AutoMigrate(&model.Abpauditlog{})
	err = DB.AutoMigrate(&model.Abpbackgroundjob{})
	err = DB.AutoMigrate(&model.Abpedition{})
	err = DB.AutoMigrate(&model.Abpentitychange{})
	err = DB.AutoMigrate(&model.Abpentitychangeset{})
	err = DB.AutoMigrate(&model.Abpentitypropertychange{})
	err = DB.AutoMigrate(&model.Abpfeature{})
	err = DB.AutoMigrate(&model.Abplanguage{})
	err = DB.AutoMigrate(&model.Abplanguagetext{})
	err = DB.AutoMigrate(&model.Abpnotification{})
	err = DB.AutoMigrate(&model.Abpnotificationsubscription{})
	err = DB.AutoMigrate(&model.Abporganizationunitrole{})
	err = DB.AutoMigrate(&model.Abporganizationunit{})
	err = DB.AutoMigrate(&model.Abppermission{})
	err = DB.AutoMigrate(&model.Abppersistedgrant{})
	err = DB.AutoMigrate(&model.Abproleclaim{})
	err = DB.AutoMigrate(&model.Abprole{})
	err = DB.AutoMigrate(&model.Abpsetting{})
	err = DB.AutoMigrate(&model.Abptenantnotification{})
	err = DB.AutoMigrate(&model.Abptenant{})
	err = DB.AutoMigrate(&model.Abpuseraccount{})
	err = DB.AutoMigrate(&model.Abpuserclaim{})
	err = DB.AutoMigrate(&model.Abpuserloginattempt{})
	err = DB.AutoMigrate(&model.Abpuserlogin{})
	err = DB.AutoMigrate(&model.Abpusernotification{})
	err = DB.AutoMigrate(&model.Abpuserorganizationunit{})
	err = DB.AutoMigrate(&model.Abpuserrole{})
	err = DB.AutoMigrate(&model.Abpuser{})
	err = DB.AutoMigrate(&model.Abpusertoken{})
	err = DB.AutoMigrate(&model.Appaliuser{})
	err = DB.AutoMigrate(&model.Appapprovalinfo{})
	err = DB.AutoMigrate(&model.Appapprovaltemplate{})
	err = DB.AutoMigrate(&model.Appbinaryobject{})
	err = DB.AutoMigrate(&model.Appbookorder{})
	err = DB.AutoMigrate(&model.Appchatmessage{})
	err = DB.AutoMigrate(&model.Appcreditloginorder{})
	err = DB.AutoMigrate(&model.Appfriendship{})
	err = DB.AutoMigrate(&model.Appinvoice{})
	err = DB.AutoMigrate(&model.Appitemlocked{})
	err = DB.AutoMigrate(&model.Appmessageboard{})
	err = DB.AutoMigrate(&model.Appnotificationlog{})
	err = DB.AutoMigrate(&model.Apppayorder{})
	err = DB.AutoMigrate(&model.Apppickupcode{})
	err = DB.AutoMigrate(&model.Appqrcode{})
	err = DB.AutoMigrate(&model.Apprecommendinfo{})
	err = DB.AutoMigrate(&model.Appsubbookinfo{})
	err = DB.AutoMigrate(&model.Appsubscriptionpayment{})
	err = DB.AutoMigrate(&model.Appusercard{})
	err = DB.AutoMigrate(&model.Appweuser{})
	err = DB.AutoMigrate(&model.Dasbusinesscount{})
	err = DB.AutoMigrate(&model.Dascirculatecount{})
	err = DB.AutoMigrate(&model.Dasdatabaselink{})
	err = DB.AutoMigrate(&model.Dasdatasource{})
	err = DB.AutoMigrate(&model.Dasfeecount{})
	err = DB.AutoMigrate(&model.Daspatronlogcount{})
	err = DB.AutoMigrate(&model.Dasperformance{})
	err = DB.AutoMigrate(&model.Dassecuritygatecount{})
	err = DB.AutoMigrate(&model.Dasvisitpage{})
	err = DB.AutoMigrate(&model.Dasvisittrend{})
	err = DB.AutoMigrate(&model.Efmigrationshistory{})
	err = DB.AutoMigrate(&model.Hangfireaggregatedcounter{})
	err = DB.AutoMigrate(&model.Hangfirecounter{})
	err = DB.AutoMigrate(&model.Hangfiredistributedlock{})
	err = DB.AutoMigrate(&model.Hangfirehash{})
	err = DB.AutoMigrate(&model.Hangfirejob{})
	err = DB.AutoMigrate(&model.Hangfirejobparameter{})
	err = DB.AutoMigrate(&model.Hangfirejobqueue{})
	err = DB.AutoMigrate(&model.Hangfirejobstate{})
	err = DB.AutoMigrate(&model.Hangfirelist{})
	err = DB.AutoMigrate(&model.Hangfireserver{})
	err = DB.AutoMigrate(&model.Hangfireset{})
	err = DB.AutoMigrate(&model.Hangfirestate{})
	err = DB.AutoMigrate(&model.Lcpcommandlog{})
	err = DB.AutoMigrate(&model.Lcpconfig{})
	err = DB.AutoMigrate(&model.Lcpmaintainlog{})
	err = DB.AutoMigrate(&model.Lcpproduct{})
	err = DB.AutoMigrate(&model.Lcprfidantenna{})
	err = DB.AutoMigrate(&model.Lcprfidreader{})
	err = DB.AutoMigrate(&model.Lcpsecuritygatebookaccesslog{})
	err = DB.AutoMigrate(&model.Lcpsecuritygatebookdailyaccess{})
	err = DB.AutoMigrate(&model.Lcpsecuritygateitemlog{})
	err = DB.AutoMigrate(&model.Lcpsecuritygatepatronlog{})
	err = DB.AutoMigrate(&model.Lcpserialport{})
	err = DB.AutoMigrate(&model.Lcpserialportext{})
	err = DB.AutoMigrate(&model.Lcpservice{})
	err = DB.AutoMigrate(&model.Lcpterminal{})
	err = DB.AutoMigrate(&model.Lcpterminaladvertisement{})
	err = DB.AutoMigrate(&model.Lcpterminalbox{})
	err = DB.AutoMigrate(&model.Lcpterminalboxitem{})
	err = DB.AutoMigrate(&model.Lcpterminaldevice{})
	err = DB.AutoMigrate(&model.Lcpterminaldevicelog{})
	err = DB.AutoMigrate(&model.Lcpterminallog{})
	err = DB.AutoMigrate(&model.Lcpterminalpermission{})
	err = DB.AutoMigrate(&model.Lcpterminalshelf{})
	err = DB.AutoMigrate(&model.Lcpterminalshelfitem{})
	err = DB.AutoMigrate(&model.Lcpterminalshelflog{})
	err = DB.AutoMigrate(&model.Lcpupgradelog{})
	err = DB.AutoMigrate(&model.Lcpversion{})
	err = DB.AutoMigrate(&model.Libailibrarainbaseinfo{})
	err = DB.AutoMigrate(&model.Libailibrarainbaseinfoitem{})
	err = DB.AutoMigrate(&model.Libailibrarainbaseinfoprofile{})
	err = DB.AutoMigrate(&model.Libailibrarainknowledgefileinfo{})
	err = DB.AutoMigrate(&model.Libailibrarainquestionmetric{})
	err = DB.AutoMigrate(&model.Libailibrarainsessionmetric{})
	err = DB.AutoMigrate(&model.Libainirobotinfo{})
	err = DB.AutoMigrate(&model.Libbatchinfo{})
	err = DB.AutoMigrate(&model.Libbatchoperateindex{})
	err = DB.AutoMigrate(&model.Libbatchoperatelog{})
	err = DB.AutoMigrate(&model.Libbookinfo{})
	err = DB.AutoMigrate(&model.Libcirculatelog{})
	err = DB.AutoMigrate(&model.LibcirculatelogBak{})
	err = DB.AutoMigrate(&model.Libfeedback{})
	err = DB.AutoMigrate(&model.Libfeelog{})
	err = DB.AutoMigrate(&model.Libinventorystat{})
	err = DB.AutoMigrate(&model.Libinventorytask{})
	err = DB.AutoMigrate(&model.Libinventorywork{})
	err = DB.AutoMigrate(&model.Libinventoryworkdetail{})
	err = DB.AutoMigrate(&model.Libinventoryworklog{})
	err = DB.AutoMigrate(&model.Libitem{})
	err = DB.AutoMigrate(&model.LibitemCopy{})
	err = DB.AutoMigrate(&model.Libiteminventoryinfo{})
	err = DB.AutoMigrate(&model.Libiteminventorylog{})
	err = DB.AutoMigrate(&model.Libitemlocinfo{})
	err = DB.AutoMigrate(&model.Libitemoperateindexlog{})
	err = DB.AutoMigrate(&model.Libitemoperatelog{})
	err = DB.AutoMigrate(&model.Libjournalinfo{})
	err = DB.AutoMigrate(&model.Liblabel{})
	err = DB.AutoMigrate(&model.Liblabeloperatelog{})
	err = DB.AutoMigrate(&model.Liblayer{})
	err = DB.AutoMigrate(&model.Liblayerindexupdatelog{})
	err = DB.AutoMigrate(&model.Libnotificationlog{})
	err = DB.AutoMigrate(&model.Libpartonreservation{})
	err = DB.AutoMigrate(&model.Libpatron{})
	err = DB.AutoMigrate(&model.Libpatronitem{})
	err = DB.AutoMigrate(&model.Libpatronlog{})
	err = DB.AutoMigrate(&model.Libpointsclearing{})
	err = DB.AutoMigrate(&model.Libpointslog{})
	err = DB.AutoMigrate(&model.Librfidantlayer{})
	err = DB.AutoMigrate(&model.Librfidscandetaillog{})
	err = DB.AutoMigrate(&model.Librfidscanlog{})
	err = DB.AutoMigrate(&model.Librow{})
	err = DB.AutoMigrate(&model.Librowcatalog{})
	err = DB.AutoMigrate(&model.Libscanitemlog{})
	err = DB.AutoMigrate(&model.Libshelf{})
	err = DB.AutoMigrate(&model.Libstruct{})
	err = DB.AutoMigrate(&model.Libtagtobarcodelog{})
	err = DB.AutoMigrate(&model.Libtaskitem{})
	err = DB.AutoMigrate(&model.Libtaskpackage{})
	err = DB.AutoMigrate(&model.Libupdatefirstbooklog{})
	err = DB.AutoMigrate(&model.Misactivity{})
	err = DB.AutoMigrate(&model.Mismediainfo{})
	err = DB.AutoMigrate(&model.Misnews{})
	err = DB.AutoMigrate(&model.Mistemplate{})
	err = DB.AutoMigrate(&model.Rescatalog{})
	err = DB.AutoMigrate(&model.Rescipinfo{})
	err = DB.AutoMigrate(&model.Resfourcorner{})
	err = DB.AutoMigrate(&model.Resjournalinfo{})
	err = DB.AutoMigrate(&model.Resnotfound{})
	err = DB.AutoMigrate(&model.Respublisherinfo{})
	err = DB.AutoMigrate(&model.Ssbackgroundjob{})
	err = DB.AutoMigrate(&model.Sysattachment{})
	err = DB.AutoMigrate(&model.Sysauditacslog{})
	err = DB.AutoMigrate(&model.Sysauditapilog{})
	err = DB.AutoMigrate(&model.Sysauditapplog{})
	err = DB.AutoMigrate(&model.Sysauditlinklog{})
	err = DB.AutoMigrate(&model.Sysauditlmslog{})
	err = DB.AutoMigrate(&model.Sysauditsslog{})
	err = DB.AutoMigrate(&model.Sysblocklist{})
	err = DB.AutoMigrate(&model.Sysbookblocklist{})
	err = DB.AutoMigrate(&model.Sysbooknumlib{})
	err = DB.AutoMigrate(&model.Sysbooknumset{})
	err = DB.AutoMigrate(&model.Syscardconfig{})
	err = DB.AutoMigrate(&model.Syscarddevdtl{})
	err = DB.AutoMigrate(&model.Syscardtype{})
	err = DB.AutoMigrate(&model.Syscoderule{})
	err = DB.AutoMigrate(&model.Syscoderuleseed{})
	err = DB.AutoMigrate(&model.Sysconfigbase{})
	err = DB.AutoMigrate(&model.Sysconfiglog{})
	err = DB.AutoMigrate(&model.Sysdataitem{})
	err = DB.AutoMigrate(&model.Sysdataitemdetail{})
	err = DB.AutoMigrate(&model.Sysdatalog{})
	err = DB.AutoMigrate(&model.Sysdepartment{})
	err = DB.AutoMigrate(&model.Sysenumfield{})
	err = DB.AutoMigrate(&model.Sysenumvalue{})
	err = DB.AutoMigrate(&model.Sysenumvalue2{})
	err = DB.AutoMigrate(&model.Sysfaceoffineoperationlog{})
	err = DB.AutoMigrate(&model.Sysfaceofflinefeature{})
	err = DB.AutoMigrate(&model.Sysfaceofflinegroup{})
	err = DB.AutoMigrate(&model.Sysfaceofflineuser{})
	err = DB.AutoMigrate(&model.Syslanguage{})
	err = DB.AutoMigrate(&model.Syslayertran{})
	err = DB.AutoMigrate(&model.Syslocation{})
	err = DB.AutoMigrate(&model.Sysmenu{})
	err = DB.AutoMigrate(&model.SysmenuCopy{})
	err = DB.AutoMigrate(&model.Systasklist{})
	err = DB.AutoMigrate(&model.Systenantconfig{})
	err = DB.AutoMigrate(&model.Systenantextend{})

	if err != nil {
		log.Printf("Failed to migrate database: %v", err)
	}
}
