// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameLcpterminaldevice = "lcpterminaldevice"

// Lcpterminaldevice mapped from table <lcpterminaldevice>
type Lcpterminaldevice struct {
	ID                   string     `gorm:"column:Id;type:varchar(32);primaryKey" json:"Id"`
	CreationTime         time.Time  `gorm:"column:CreationTime;type:datetime(6);not null" json:"CreationTime"`
	CreatorUserID        *int64     `gorm:"column:CreatorUserId;type:bigint(20)" json:"CreatorUserId"`
	LastModificationTime *time.Time `gorm:"column:LastModificationTime;type:datetime(6)" json:"LastModificationTime"`
	LastModifierUserID   *int64     `gorm:"column:LastModifierUserId;type:bigint(20)" json:"LastModifierUserId"`
	IsDeleted            []uint8    `gorm:"column:IsDeleted;type:bit(1);not null" json:"IsDeleted"`
	DeleterUserID        *int64     `gorm:"column:DeleterUserId;type:bigint(20)" json:"DeleterUserId"`
	DeletionTime         *time.Time `gorm:"column:DeletionTime;type:datetime(6)" json:"DeletionTime"`
	TerminalID           string     `gorm:"column:TerminalId;type:varchar(32);not null" json:"TerminalId"`
	TerminalDeviceType   int64      `gorm:"column:TerminalDeviceType;type:tinyint(3) ;not null" json:"TerminalDeviceType"`
	Name                 string     `gorm:"column:Name;type:varchar(64);not null" json:"Name"`
	IsError              []uint8    `gorm:"column:IsError;type:bit(1);not null" json:"IsError"`
	ErrorMessage         *string    `gorm:"column:ErrorMessage;type:varchar(256)" json:"ErrorMessage"`
	Brand                string     `gorm:"column:Brand;type:varchar(64);not null" json:"Brand"`
	Model                *string    `gorm:"column:Model;type:varchar(64)" json:"Model"`
	Version              *string    `gorm:"column:Version;type:varchar(64)" json:"Version"`
	ConnectionString     *string    `gorm:"column:ConnectionString;type:varchar(128)" json:"ConnectionString"`
	Remark               *string    `gorm:"column:Remark;type:varchar(256)" json:"Remark"`
	TenantID             int64      `gorm:"column:TenantId;type:int(11);not null" json:"TenantId"`
}

// TableName Lcpterminaldevice's table name
func (*Lcpterminaldevice) TableName() string {
	return TableNameLcpterminaldevice
}
