// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameAbptenantnotification = "abptenantnotifications"

// Abptenantnotification mapped from table <abptenantnotifications>
type Abptenantnotification struct {
	ID                              string    `gorm:"column:Id;type:char(36);primaryKey" json:"Id"`
	CreationTime                    time.Time `gorm:"column:CreationTime;type:datetime(6);not null" json:"CreationTime"`
	CreatorUserID                   *int64    `gorm:"column:CreatorUserId;type:bigint" json:"CreatorUserId"`
	TenantID                        *int64    `gorm:"column:TenantId;type:int" json:"TenantId"`
	NotificationName                string    `gorm:"column:NotificationName;type:varchar(96);not null" json:"NotificationName"`
	Data                            *string   `gorm:"column:Data;type:longtext" json:"Data"`
	DataTypeName                    *string   `gorm:"column:DataTypeName;type:varchar(512)" json:"DataTypeName"`
	EntityTypeName                  *string   `gorm:"column:EntityTypeName;type:varchar(250)" json:"EntityTypeName"`
	EntityTypeAssemblyQualifiedName *string   `gorm:"column:EntityTypeAssemblyQualifiedName;type:varchar(512)" json:"EntityTypeAssemblyQualifiedName"`
	EntityID                        *string   `gorm:"column:EntityId;type:varchar(96)" json:"EntityId"`
	Severity                        int64     `gorm:"column:Severity;type:tinyint unsigned;not null" json:"Severity"`
	Discriminator                   string    `gorm:"column:Discriminator;type:varchar(24);not null;default:ext" json:"Discriminator"`
	MessageName                     *string   `gorm:"column:MessageName;type:varchar(96)" json:"MessageName"`
}

// TableName Abptenantnotification's table name
func (*Abptenantnotification) TableName() string {
	return TableNameAbptenantnotification
}
