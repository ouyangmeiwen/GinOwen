// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameLcpterminallog = "lcpterminallog"

// Lcpterminallog mapped from table <lcpterminallog>
type Lcpterminallog struct {
	ID                  string    `gorm:"column:Id;type:varchar(32);primaryKey" json:"Id"`
	CreationTime        time.Time `gorm:"column:CreationTime;type:datetime(6);not null" json:"CreationTime"`
	CreatorUserID       *int64    `gorm:"column:CreatorUserId;type:bigint" json:"CreatorUserId"`
	TerminalID          string    `gorm:"column:TerminalId;type:varchar(32);not null" json:"TerminalId"`
	TerminalCode        string    `gorm:"column:TerminalCode;type:varchar(32);not null" json:"TerminalCode"`
	TerminalName        string    `gorm:"column:TerminalName;type:varchar(128);not null" json:"TerminalName"`
	TerminalVersionName *string   `gorm:"column:TerminalVersionName;type:varchar(32)" json:"TerminalVersionName"`
	Business            int64     `gorm:"column:Business;type:tinyint unsigned;not null" json:"Business"`
	TerminalLogType     int64     `gorm:"column:TerminalLogType;type:tinyint unsigned;not null" json:"TerminalLogType"`
	ClassName           string    `gorm:"column:ClassName;type:varchar(256);not null" json:"ClassName"`
	MethodName          string    `gorm:"column:MethodName;type:varchar(256);not null" json:"MethodName"`
	Parameters          *string   `gorm:"column:Parameters;type:varchar(1024)" json:"Parameters"`
	Result              int64     `gorm:"column:Result;type:tinyint unsigned;not null" json:"Result"`
	ErrorMessage        *string   `gorm:"column:ErrorMessage;type:longtext" json:"ErrorMessage"`
	Remark              *string   `gorm:"column:Remark;type:varchar(256)" json:"Remark"`
	TenantID            int64     `gorm:"column:TenantId;type:int;not null" json:"TenantId"`
}

// TableName Lcpterminallog's table name
func (*Lcpterminallog) TableName() string {
	return TableNameLcpterminallog
}
